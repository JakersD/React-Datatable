[{"C:\\Users\\ilyaC\\Documents\\gitProject\\Training\\filtertask\\src\\index.js":"1","C:\\Users\\ilyaC\\Documents\\gitProject\\Training\\filtertask\\src\\helper\\url.js":"2","C:\\Users\\ilyaC\\Documents\\gitProject\\Training\\filtertask\\src\\components\\Datatable\\Datatable.jsx":"3","C:\\Users\\ilyaC\\Documents\\gitProject\\Training\\filtertask\\src\\components\\Routing\\Routing.jsx":"4","C:\\Users\\ilyaC\\Documents\\gitProject\\Training\\filtertask\\src\\components\\Searchform\\SearchForm.jsx":"5","C:\\Users\\ilyaC\\Documents\\gitProject\\Training\\filtertask\\src\\components\\Dropdown\\Dropdown.jsx":"6","C:\\Users\\ilyaC\\Documents\\gitProject\\Training\\filtertask\\src\\components\\Dropdown\\OutsideTracker.jsx":"7","C:\\Users\\ilyaC\\Documents\\gitProject\\Training\\filtertask\\src\\components\\Routing\\Loadingwheel\\Loadingwheel.jsx":"8","C:\\Users\\ilyaC\\Documents\\gitProject\\Training\\filtertask\\src\\components\\DataAddForm\\DataAddForm.jsx":"9"},{"size":211,"mtime":1607839951900,"results":"10","hashOfConfig":"11"},{"size":495,"mtime":1607464651541,"results":"12","hashOfConfig":"11"},{"size":8229,"mtime":1607954073730,"results":"13","hashOfConfig":"11"},{"size":1205,"mtime":1607886749953,"results":"14","hashOfConfig":"11"},{"size":1710,"mtime":1607954169280,"results":"15","hashOfConfig":"11"},{"size":1157,"mtime":1607954383300,"results":"16","hashOfConfig":"11"},{"size":808,"mtime":1607954077219,"results":"17","hashOfConfig":"11"},{"size":673,"mtime":1607873472483,"results":"18","hashOfConfig":"11"},{"size":8462,"mtime":1607952104261,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"18auc55",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"22"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"C:\\Users\\ilyaC\\Documents\\gitProject\\Training\\filtertask\\src\\index.js",[],["41","42"],"C:\\Users\\ilyaC\\Documents\\gitProject\\Training\\filtertask\\src\\helper\\url.js",[],"C:\\Users\\ilyaC\\Documents\\gitProject\\Training\\filtertask\\src\\components\\Datatable\\Datatable.jsx",["43"],"import React, { useState, useEffect, useCallback } from 'react';\r\n\r\nimport Pagination from 'rc-pagination';\r\nimport locale from 'rc-pagination/lib/locale/ru_RU';\r\n\r\nimport Dropdown from '../Dropdown/Dropdown';\r\nimport SearchForm from '../Searchform/SearchForm';\r\nimport DataAddForm from '../DataAddForm/DataAddForm';\r\n\r\nexport default function App({ loadedData, setLoadedData }) {\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [currentData, setCurrentData] = useState([]);\r\n  const [dataPerPage] = useState(20);\r\n\r\n  const [open, setOpen] = useState(false);\r\n  const [currentUser, setCurrentUser] = useState({});\r\n\r\n  const [Q, setQ] = useState('');\r\n  const [paginateData, setPaginateData] = useState(0);\r\n  const [filteredData, setFilteredData] = useState([]);\r\n\r\n  const [typeOfSorting, setTypeOfSorting] = useState('none');\r\n  const [lastType, setLastType] = useState('');\r\n  const [sortedData, setSortedData] = useState([]);\r\n\r\n  const changeCurrentData = useCallback(\r\n    (data) => {\r\n      const indexOfLastData = currentPage * dataPerPage;\r\n      const indexOfFirstData = indexOfLastData - dataPerPage;\r\n      setCurrentData(data.slice(indexOfFirstData, indexOfLastData));\r\n      setPaginateData(data.length);\r\n    },\r\n    [currentPage, dataPerPage]\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (Q.length !== 0 && sortedData.length === 0) {\r\n      changeCurrentData(filteredData);\r\n      return;\r\n    }\r\n    if (Q.length === 0 && sortedData.length !== 0) {\r\n      changeCurrentData(sortedData);\r\n      return;\r\n    }\r\n    if (Q.length !== 0 && sortedData.length !== 0) {\r\n      changeCurrentData(sortedData);\r\n      return;\r\n    }\r\n    changeCurrentData(loadedData);\r\n  }, [currentPage, loadedData]);\r\n\r\n  const paginationOnChange = (page) => {\r\n    setCurrentPage(page);\r\n  };\r\n\r\n  const dropdownUser = (user) => {\r\n    setOpen(true);\r\n    setCurrentUser(user);\r\n  };\r\n\r\n  const sortingFunction = (type, classChanger, isNone) => {\r\n    if (typeOfSorting === 'none' || isNone) {\r\n      const loadedSortedDataId = loadedData.slice().sort((a, b) => a[type] - b[type]);\r\n      const filteredSortedDataId = filteredData.slice().sort((a, b) => a[type] - b[type]);\r\n      const loadedSortedData = loadedData.slice().sort((a, b) => {\r\n        if (a[type] < b[type]) return -1;\r\n        if (a[type] < b[type]) return 1;\r\n        return 1;\r\n      });\r\n      const filteredSortedData = filteredData.slice().sort((a, b) => {\r\n        if (a[type] < b[type]) return -1;\r\n        if (a[type] < b[type]) return 1;\r\n        return 1;\r\n      });\r\n      setTypeOfSorting('highToLow');\r\n      classChanger.classList.remove('disabled');\r\n      classChanger.classList.add('activeDown');\r\n      if (filteredData.length === 0) {\r\n        if (type === 'id') {\r\n          setSortedData(loadedSortedDataId);\r\n          changeCurrentData(loadedSortedDataId);\r\n          return;\r\n        }\r\n        setSortedData(loadedSortedData);\r\n        changeCurrentData(loadedSortedData);\r\n      } else {\r\n        if (type === 'id') {\r\n          setSortedData(filteredSortedDataId);\r\n          changeCurrentData(filteredSortedDataId);\r\n          return;\r\n        }\r\n        setSortedData(filteredSortedData);\r\n        changeCurrentData(filteredSortedData);\r\n      }\r\n      return;\r\n    }\r\n    if (typeOfSorting === 'highToLow') {\r\n      const loadedSortedDataId = loadedData\r\n        .slice()\r\n        .sort((a, b) => a[type] - b[type])\r\n        .reverse();\r\n      const filteredSortedDataId = filteredData\r\n        .slice()\r\n        .sort((a, b) => a[type] - b[type])\r\n        .reverse();\r\n      const loadedSortedData = loadedData\r\n        .slice()\r\n        .sort((a, b) => {\r\n          if (a[type] < b[type]) return -1;\r\n          if (a[type] < b[type]) return 1;\r\n          return 1;\r\n        })\r\n        .reverse();\r\n      const filteredSortedData = filteredData\r\n        .slice()\r\n        .sort((a, b) => {\r\n          if (a[type] < b[type]) return -1;\r\n          if (a[type] < b[type]) return 1;\r\n          return 1;\r\n        })\r\n        .reverse();\r\n      setTypeOfSorting('lowToHigh');\r\n      classChanger.classList.remove('activeDown');\r\n      classChanger.classList.add('activeUp');\r\n      if (filteredData.length === 0) {\r\n        if (type === 'id') {\r\n          setSortedData(loadedSortedDataId);\r\n          changeCurrentData(loadedSortedDataId);\r\n          return;\r\n        }\r\n        setSortedData(loadedSortedData);\r\n        changeCurrentData(loadedSortedData);\r\n      } else {\r\n        if (type === 'id') {\r\n          setSortedData(filteredSortedDataId);\r\n          changeCurrentData(filteredSortedDataId);\r\n        }\r\n        setSortedData(filteredSortedData);\r\n        changeCurrentData(filteredSortedData);\r\n      }\r\n    }\r\n    if (typeOfSorting === 'lowToHigh') {\r\n      setTypeOfSorting('none');\r\n      setSortedData([]);\r\n      document.querySelectorAll('.sorting').forEach((v) => (v.className = 'sorting disabled'));\r\n      if (filteredData.length === 0) {\r\n        changeCurrentData(loadedData);\r\n      } else {\r\n        changeCurrentData(filteredData);\r\n      }\r\n    }\r\n  };\r\n\r\n  const sorting = (type) => {\r\n    setLastType(type.id);\r\n    const classChanger = type.querySelector('div');\r\n    if (lastType === type.id) {\r\n      sortingFunction(type.id, classChanger, false);\r\n      return;\r\n    }\r\n    if (lastType !== type.id || lastType.length === 0) {\r\n      document.querySelectorAll('.sorting').forEach((v) => (v.className = 'sorting disabled'));\r\n      setSortedData([]);\r\n      sortingFunction(type.id, classChanger, true);\r\n      return;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"wrapper\">\r\n      <SearchForm\r\n        changeCurrentData={changeCurrentData}\r\n        setFilteredData={setFilteredData}\r\n        loadedData={loadedData}\r\n        Q={Q}\r\n        setQ={setQ}\r\n        setCurrentPage={setCurrentPage}\r\n        setTypeOfSorting={setTypeOfSorting}\r\n        setSortedData={setSortedData}\r\n      />\r\n      <DataAddForm setLoadedData={setLoadedData} loadedData={loadedData} />\r\n      <div className=\"Table\">\r\n        <div className=\"THeading\">\r\n          <div className=\"TRow\">\r\n            <div className=\"THead\">\r\n              <div className=\"THead-wrapper\" id={'id'} onClick={(e) => sorting(e.target)}>\r\n                ID\r\n                <div className=\"sorting disabled\" id={'id'} />\r\n              </div>\r\n            </div>\r\n            <div className=\"THead\">\r\n              <div className=\"THead-wrapper\" id={'firstName'} onClick={(e) => sorting(e.target)}>\r\n                Name\r\n                <div className=\"sorting disabled\" />\r\n              </div>\r\n            </div>\r\n            <div className=\"THead\">\r\n              <div className=\"THead-wrapper\" id={'lastName'} onClick={(e) => sorting(e.target)}>\r\n                Surname\r\n                <div className=\"sorting disabled\" />\r\n              </div>\r\n            </div>\r\n            <div className=\"THead\">\r\n              <div className=\"THead-wrapper\" id={'email'} onClick={(e) => sorting(e.target)}>\r\n                Email\r\n                <div className=\"sorting disabled\" />\r\n              </div>\r\n            </div>\r\n            <div className=\"THead\">\r\n              <div className=\"THead-wrapper\" id={'phone'} onClick={(e) => sorting(e.target)}>\r\n                Phone\r\n                <div className=\"sorting disabled\" />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {currentData.map((v, i) => (\r\n          <div className=\"TBody\" key={i} onClick={() => dropdownUser(v)}>\r\n            <div className=\"TRow\">\r\n              <div className=\"TCell\">{v.id}</div>\r\n              <div className=\"TCell\">{v.firstName}</div>\r\n              <div className=\"TCell\">{v.lastName}</div>\r\n              <div className=\"TCell\">{v.email}</div>\r\n              <div className=\"TCell\">{v.phone}</div>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <Pagination\r\n        current={currentPage}\r\n        total={paginateData}\r\n        defaultPageSize={dataPerPage}\r\n        onChange={paginationOnChange}\r\n        locale={locale}\r\n      />\r\n      {open && (\r\n        <Dropdown currentUser={currentUser} setOpen={setOpen} setCurrentUser={setCurrentUser} />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\ilyaC\\Documents\\gitProject\\Training\\filtertask\\src\\components\\Routing\\Routing.jsx",[],"C:\\Users\\ilyaC\\Documents\\gitProject\\Training\\filtertask\\src\\components\\Searchform\\SearchForm.jsx",[],"C:\\Users\\ilyaC\\Documents\\gitProject\\Training\\filtertask\\src\\components\\Dropdown\\Dropdown.jsx",[],"C:\\Users\\ilyaC\\Documents\\gitProject\\Training\\filtertask\\src\\components\\Dropdown\\OutsideTracker.jsx",["44"],"import React, { useEffect, useRef } from 'react';\r\n\r\nfunction useOutsideTracker(ref, setOpen, setCurrentUser) {\r\n  useEffect(() => {\r\n    const handleClickOutside = (event) => {\r\n      if (ref.current && !ref.current.contains(event.target)) {\r\n        setOpen(false);\r\n        setCurrentUser({});\r\n      }\r\n    };\r\n    document.addEventListener('mousedown', handleClickOutside);\r\n    return () => {\r\n      document.removeEventListener('mousedown', handleClickOutside);\r\n    };\r\n  }, [ref]);\r\n}\r\n\r\nconst OutsideTracker = ({ children, setOpen, setCurrentUser, ClassName }) => {\r\n  const wrapperRef = useRef(null);\r\n  useOutsideTracker(wrapperRef, setOpen, setCurrentUser);\r\n  return (\r\n    <div ref={wrapperRef} className={ClassName}>\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OutsideTracker;\r\n","C:\\Users\\ilyaC\\Documents\\gitProject\\Training\\filtertask\\src\\components\\Routing\\Loadingwheel\\Loadingwheel.jsx",[],"C:\\Users\\ilyaC\\Documents\\gitProject\\Training\\filtertask\\src\\components\\DataAddForm\\DataAddForm.jsx",[],{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","severity":1,"message":"50","line":50,"column":6,"nodeType":"51","endLine":50,"endColumn":31,"suggestions":"52"},{"ruleId":"49","severity":1,"message":"53","line":15,"column":6,"nodeType":"51","endLine":15,"endColumn":11,"suggestions":"54"},"no-native-reassign",["55"],"no-negated-in-lhs",["56"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'Q.length', 'changeCurrentData', 'filteredData', and 'sortedData'. Either include them or remove the dependency array.","ArrayExpression",["57"],"React Hook useEffect has missing dependencies: 'setCurrentUser' and 'setOpen'. Either include them or remove the dependency array. If 'setOpen' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["58"],"no-global-assign","no-unsafe-negation",{"desc":"59","fix":"60"},{"desc":"61","fix":"62"},"Update the dependencies array to be: [Q.length, changeCurrentData, currentPage, filteredData, loadedData, sortedData]",{"range":"63","text":"64"},"Update the dependencies array to be: [ref, setCurrentUser, setOpen]",{"range":"65","text":"66"},[1691,1716],"[Q.length, changeCurrentData, currentPage, filteredData, loadedData, sortedData]",[483,488],"[ref, setCurrentUser, setOpen]"]